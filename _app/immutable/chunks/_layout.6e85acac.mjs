import{u as l,f as d,a as p}from"./userData.da927e9c.mjs";import{s as f}from"./utils.62c1f2f7.mjs";const{repoRetrospective:r}=p,{github:a}=l;async function b({fetch:i,data:c}){async function u(){const t=await(await i(`https://api.github.com/users/${a.username}/repos`)).json().then(o=>o.length?o:(console.warn("github error, using fallback repository data"),[...d.repoData]));a.excludedRepos.forEach(o=>{const n=t.findIndex(e=>e.id===o);n!==-1&&t.splice(n,1)});for(const o in r){const n=t.findIndex(e=>e.id===Number(o));if(n===-1)return console.warn(`!!! failed to append additional information to repository ${o}, not found`),null;Object.keys(r[o]).forEach(e=>{t[n][e]=r[o][e]})}return t}const s=await u();return{...c,repos:a.sort?f(s):s}}const h=Object.freeze(Object.defineProperty({__proto__:null,load:b},Symbol.toStringTag,{value:"Module"}));export{h as _,b as l};
